[{"C:\\Learning\\resume\\src\\index.tsx":"1","C:\\Learning\\resume\\src\\App.tsx":"2","C:\\Learning\\resume\\src\\Components\\NavBar\\NavBar.tsx":"3","C:\\Learning\\resume\\src\\Components\\Routing\\AppRouter.tsx":"4","C:\\Learning\\resume\\src\\utils\\constants.ts":"5","C:\\Learning\\resume\\src\\Components\\Routing\\routes.ts":"6","C:\\Learning\\resume\\src\\Pages\\Bio page\\bio.tsx":"7","C:\\Learning\\resume\\src\\Pages\\Work history page\\work.tsx":"8","C:\\Learning\\resume\\src\\Pages\\Pet projects page\\pet.tsx":"9","C:\\Learning\\resume\\src\\Pages\\Bio page\\components\\featureItem.tsx":"10","C:\\Learning\\resume\\src\\Pages\\Bio page\\components\\WorkItem.tsx":"11","C:\\Learning\\resume\\src\\Pages\\Work history page\\components\\workItem.tsx":"12","C:\\Learning\\resume\\src\\Pages\\Work history page\\components\\arrays.ts":"13"},{"size":275,"mtime":1663146397730,"results":"14","hashOfConfig":"15"},{"size":424,"mtime":1663146397717,"results":"16","hashOfConfig":"15"},{"size":754,"mtime":1663146538659,"results":"17","hashOfConfig":"15"},{"size":447,"mtime":1663018511000,"results":"18","hashOfConfig":"15"},{"size":108,"mtime":1663018511000,"results":"19","hashOfConfig":"15"},{"size":451,"mtime":1663018511000,"results":"20","hashOfConfig":"15"},{"size":6596,"mtime":1663228133163,"results":"21","hashOfConfig":"15"},{"size":1522,"mtime":1663238435072,"results":"22","hashOfConfig":"15"},{"size":136,"mtime":1663160964137,"results":"23","hashOfConfig":"15"},{"size":386,"mtime":1663160874123,"results":"24","hashOfConfig":"15"},{"size":697,"mtime":1663160866058,"results":"25","hashOfConfig":"15"},{"size":3856,"mtime":1663238595685,"results":"26","hashOfConfig":"15"},{"size":938,"mtime":1663238138163,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"8xh66j",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Learning\\resume\\src\\index.tsx",[],[],[],"C:\\Learning\\resume\\src\\App.tsx",[],[],"C:\\Learning\\resume\\src\\Components\\NavBar\\NavBar.tsx",[],[],"C:\\Learning\\resume\\src\\Components\\Routing\\AppRouter.tsx",[],[],"C:\\Learning\\resume\\src\\utils\\constants.ts",[],[],"C:\\Learning\\resume\\src\\Components\\Routing\\routes.ts",[],[],"C:\\Learning\\resume\\src\\Pages\\Bio page\\bio.tsx",[],[],"C:\\Learning\\resume\\src\\Pages\\Work history page\\work.tsx",[],[],"C:\\Learning\\resume\\src\\Pages\\Pet projects page\\pet.tsx",[],[],[],"C:\\Learning\\resume\\src\\Pages\\Bio page\\components\\featureItem.tsx",[],[],"C:\\Learning\\resume\\src\\Pages\\Bio page\\components\\WorkItem.tsx",[],[],"C:\\Learning\\resume\\src\\Pages\\Work history page\\components\\workItem.tsx",["70"],[],"import React, {FC, useEffect} from 'react';\r\nimport classes from '../work.module.css'\r\n\r\ninterface WorkItemProps {\r\n    logo: string;\r\n    title: string;\r\n    description: string;\r\n    color: string;\r\n    dates: string;\r\n    position: string;\r\n    techObject: object;\r\n    duties: string[];\r\n    link: string;\r\n}\r\n\r\nconst WorkItem: FC<WorkItemProps> = ({logo, title, description, color, dates, position, techObject, duties, link}) => {\r\n\r\n    const keys = Object.keys(techObject)\r\n    const values = Object.values(techObject)\r\n\r\n    const openInNewTab = (url: string) => {\r\n        const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n        if (newWindow) newWindow.opener = null;\r\n    };\r\n\r\n    return (\r\n        <div className={classes.workItemCont}>\r\n            <div className={classes.leftSide}>\r\n                <div className={classes.itemExactly}>\r\n                    <img src={logo} alt={\"alt\"}/>\r\n                    <div className={classes.companyDescriptionContainer}>\r\n                        <div className={classes.companyDescription}>\r\n                            <span onClick={() => openInNewTab(link)} style={{color: color}} className={classes.companyName}>{title}</span> - {description}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.myRole}>\r\n                        <div className={classes.specs}>\r\n                            <div className={classes.specsTitle}>Technologies</div>\r\n                            {keys.map((item, index) => {\r\n                                return (\r\n                                    <div\r\n                                        className={classes.specRow}\r\n                                        key={item}\r\n                                        style={ index % 2\r\n                                            ? {background: \"lightgray\"}\r\n                                            : {background: \"#fff\"}\r\n                                        }\r\n                                    >\r\n                                        <div className={classes.specExactly}>{item}</div>\r\n                                        <div className={classes.specDesc}>{values[index]}</div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className={classes.duties}>\r\n                            <div className={classes.specsTitle}>\r\n                                My Duties\r\n                            </div>\r\n                            <div>\r\n                                {duties.map((item, index) => {\r\n                                    return (\r\n                                        <div className={classes.specDutiesRow}\r\n                                             key={item}\r\n                                             style={ index % 2\r\n                                                 ? {background: \"lightgray\"}\r\n                                                 : {background: \"#fff\"}\r\n                                             }\r\n                                        >\r\n                                            {item}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.rightSide}>\r\n                <div className={classes.dates}>\r\n                    {dates}\r\n                </div>\r\n                <div className={classes.position}>\r\n                    {position}\r\n                </div>\r\n                <span className={classes.line}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkItem;","C:\\Learning\\resume\\src\\Pages\\Work history page\\components\\arrays.ts",[],[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":20,"nodeType":"73","messageId":"74","endLine":1,"endColumn":29},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]